#pragma once

#include <sstream>
#include <string>

#define PFAEDLE_GIT_REF "@pfaedle_git_ref@"
#define PFAEDLE_GIT_TAG "@pfaedle_git_tag@"
#define PFAEDLE_GIT_BRANCH "@pfaedle_git_branch@"
#define INSTALL_PREFIX "@CMAKE_INSTALL_PREFIX@"

namespace pfaedle
{

#if defined (__clang__)
# pragma clang diagnostic ignored "-Wunused-function"
# pragma clang diagnostic push
#elif defined (__GNUC__)
# pragma GCC   diagnostic ignored "-Wunused-function"
# pragma GCC   diagnostic push
#endif
static std::string short_version()
{
    return PFAEDLE_GIT_TAG;
}

static std::string long_version()
{
    std::stringstream ss;
    ss << PFAEDLE_GIT_TAG
       << " (git-ref: " << PFAEDLE_GIT_REF
       << " on " << PFAEDLE_GIT_BRANCH << ")";
    return ss.str();
}

static std::string install_prefix_path()
{
    std::stringstream ss;
    ss << INSTALL_PREFIX;
    return ss.str();
}
#if defined (__clang__)
#pragma GCC diagnostic pop
#elif defined (__clang__)
#pragma clang diagnostic pop
#endif

}// namespace pfaedle
